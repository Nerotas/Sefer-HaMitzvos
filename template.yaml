AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Daily Mitzvah Bot Lambda Function

Globals:
  Function:
    Timeout: 30
    Runtime: python3.11

Parameters:
  TwilioAccountSid:
    Type: String
    Description: Twilio Account SID
    NoEcho: true

  TwilioAuthToken:
    Type: String
    Description: Twilio Auth Token
    NoEcho: true

  TwilioWhatsAppNumber:
    Type: String
    Description: Twilio WhatsApp Number
    Default: "+15558414026"

  Recipients:
    Type: String
    Description: Comma-separated list of recipient WhatsApp numbers

  WebhookToken:
    Type: String
    Description: Optional shared secret token to protect Function URL (leave blank for public)
    Default: ""

Resources:
  DailyMitzvahBot:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: bots/lambda_mitzvah_bot.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SubscribersTable
      Environment:
        Variables:
          TWILIO_ACCOUNT_SID: !Ref TwilioAccountSid
          TWILIO_AUTH_TOKEN: !Ref TwilioAuthToken
          TWILIO_WHATSAPP_NUMBER: !Ref TwilioWhatsAppNumber
          RECIPIENTS: !Ref Recipients
          WEBHOOK_TOKEN: !Ref WebhookToken
          SUBSCRIBERS_TABLE: !Ref SubscribersTable
      FunctionUrlConfig:
        AuthType: NONE
        Cors:
          AllowOrigins:
            - "*"
          AllowMethods:
            - GET
            - POST
          AllowHeaders:
            - "*"

  # Timezone-aware daily schedule at 10:00 AM America/Chicago using EventBridge Scheduler
  SchedulerInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowInvokeDailyMitzvahBot
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !GetAtt DailyMitzvahBot.Arn

  DailyMitzvahSchedule:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: !Sub "daily-mitzvah-10am-chicago-${AWS::StackName}"
      Description: "Daily Mitzvah Bot - 10:00 AM America/Chicago"
      State: ENABLED
      ScheduleExpression: "cron(0 10 * * ? *)"
      ScheduleExpressionTimezone: "America/Chicago"
      FlexibleTimeWindow:
        Mode: "OFF"
      Target:
        Arn: !GetAtt DailyMitzvahBot.Arn
        RoleArn: !GetAtt SchedulerInvokeRole.Arn
        Input: "{}"
        RetryPolicy:
          MaximumRetryAttempts: 2
          MaximumEventAgeInSeconds: 3600

  SchedulerInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DailyMitzvahBot
      Action: lambda:InvokeFunction
      Principal: scheduler.amazonaws.com
      SourceArn: !GetAtt DailyMitzvahSchedule.Arn

  # DynamoDB table to store WhatsApp subscribers and consent
  SubscribersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: phone
          AttributeType: S
      KeySchema:
        - AttributeName: phone
          KeyType: HASH
      TableName: !Sub "${AWS::StackName}-subscribers"

  # Consent capture Lambda (Function URL) to handle Twilio webhooks and web form submissions
  ConsentHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: bots/consent_handler.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SubscribersTable
      Environment:
        Variables:
          SUBSCRIBERS_TABLE: !Ref SubscribersTable
          TWILIO_AUTH_TOKEN: !Ref TwilioAuthToken
          REQUIRE_TWILIO_SIGNATURE: "false"
      FunctionUrlConfig:
        AuthType: NONE
        Cors:
          AllowOrigins:
            - "*"
          AllowMethods:
            - GET
            - POST
          AllowHeaders:
            - "*"

Outputs:
  DailyMitzvahBotFunction:
    Description: Daily Mitzvah Bot Lambda Function ARN
    Value: !GetAtt DailyMitzvahBot.Arn
  DailyMitzvahBotName:
    Description: Daily Mitzvah Bot Lambda Function Name
    Value: !Ref DailyMitzvahBot
  DailyMitzvahBotFunctionUrl:
    Description: Function URL for triggering the bot via HTTP
    Value: !Ref DailyMitzvahBotUrl
  ConsentFunctionUrl:
    Description: Function URL for the consent capture endpoint
    Value: !Ref ConsentHandlerUrl
  ConsentHandlerName:
    Description: Consent Handler Lambda Function Name
    Value: !Ref ConsentHandler
