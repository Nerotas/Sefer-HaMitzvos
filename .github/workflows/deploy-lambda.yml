name: Deploy Lambda Function

on:
  workflow_run:
    workflows: ["Deploy with AWS SAM"]
    types: [completed]

concurrency:
  group: lambda-deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code (same commit as SAM run)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twilio requests

      - name: Create Lambda package
        run: |
          mkdir lambda_package
          cp bots/lambda_mitzvah_bot.py lambda_package/
          cp Schedule.csv lambda_package/ 2>/dev/null || echo "Schedule.csv not found, using embedded data"
          pip install twilio requests -t lambda_package/
          cd lambda_package
          zip -r ../mitzvah_bot_lambda.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Resolve Lambda function name from stack (fallback to secret)
        id: resolve-fn
        env:
          LAMBDA_FN_SECRET: ${{ secrets.LAMBDA_FUNCTION_NAME }}
        run: |
          FN=$(aws cloudformation describe-stacks --stack-name daily-mitzvah-bot-stack --query "Stacks[0].Outputs[?OutputKey=='DailyMitzvahBotName'].OutputValue" --output text 2>/dev/null || true)
          if [ -z "$FN" ] || [ "$FN" = "None" ]; then
            FN="$LAMBDA_FN_SECRET"
          fi
          if [ -z "$FN" ]; then
            echo "Could not resolve Lambda function name" >&2
            exit 1
          fi
          echo "name=$FN" >> $GITHUB_OUTPUT

      - name: Deploy to Lambda
        run: |
          aws lambda update-function-code \
            --function-name "${{ steps.resolve-fn.outputs.name }}" \
            --zip-file fileb://mitzvah_bot_lambda.zip

      - name: Wait for code update to complete
        run: |
          aws lambda wait function-updated \
            --function-name "${{ steps.resolve-fn.outputs.name }}"

      - name: Update Lambda configuration (if needed)
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_WHATSAPP_NUMBER: ${{ secrets.TWILIO_WHATSAPP_NUMBER }}
          RECIPIENTS: ${{ secrets.RECIPIENTS }}
        run: |
          aws lambda update-function-configuration \
            --function-name "${{ steps.resolve-fn.outputs.name }}" \
            --timeout 30 \
            --environment "Variables={\"TWILIO_ACCOUNT_SID\":\"$TWILIO_ACCOUNT_SID\",\"TWILIO_AUTH_TOKEN\":\"$TWILIO_AUTH_TOKEN\",\"TWILIO_WHATSAPP_NUMBER\":\"$TWILIO_WHATSAPP_NUMBER\",\"RECIPIENTS\":\"$RECIPIENTS\"}"

      - name: Wait for configuration update
        run: |
          aws lambda wait function-updated \
            --function-name "${{ steps.resolve-fn.outputs.name }}"

      - name: Test Lambda function
        run: |
          aws lambda invoke \
            --function-name "${{ steps.resolve-fn.outputs.name }}" \
            --payload '{}' \
            response.json
          cat response.json
